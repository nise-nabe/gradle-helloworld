version: '3'

networks:
  app:
  ci:
  monitoring:

services:
  nginx:
    container_name: hello-nginx
    image: nginx
    ports:
      - 80:80
    networks:
      - app
  redis:
    container_name: hello-redis
    image: redis
    ports:
      - 6379:6379
    networks:
      - app
  mysql:
    container_name: hello-mysql
    image: mysql
    volumes:
      - ./docker/mysql/datadir:/var/lib/mysql
    ports:
      - 3316:3316
    environment:
      MYSQL_ROOT_PASSWORD: password
    networks:
      - app
  zipkin:
    container_name: hello-zipkin
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      - monitoring
  centraldogma:
    container_name: hello-centraldogma
    image: line/centraldogma
    volumes:
      - ./docker/centraldogma/datadir:/opt/centraldogma/data
    ports:
      - 36462:36462
    networks:
      - app
  fluentd:
    container_name: hello-fluentd
    image: fluentd
    ports:
      - 24224:24224
    networks:
      - app
  teamcity-server:
    container_name: hello-teamcity-server
    image: jetbrains/teamcity-server
    volumes:
      - ./docker/teamcity_server/datadir:/data/teamcity_server/datadir
      - ./docker/teamcity_server/logs:/opt/teamcity/logs
    ports:
      - 8111:8111
    networks:
      - ci
  teamcity-agent:
    container_name: hello-teamcity-agent
    image: jetbrains/teamcity-agent
    environment:
      SERVER_URL: http://teamcity-server:8111
    networks:
      - ci
  teamcity-agent-java11:
    build:
      context: docker/teamcity-agent-java11
      dockerfile: Dockerfile
    container_name: hello-teamcity-agent-java11
    environment:
      SERVER_URL: http://teamcity-server:8111
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      TEAMCITY_JRE: /usr/lib/jvm/java-11-openjdk-amd64
    networks:
      - ci
  jenkins:
    container_name: hello-jenkins
    image: jenkins/jenkins:lts-jdk11
    ports:
      - 8112:8080
      - 50000:50000
    volumes:
      - ./docker/jenkins/jenkins_home:/var/jenkins_home
    networks:
      - ci
  grafana:
    container_name: hello-grafana
    image: grafana/grafana
    ports:
    - 3000:3000
    networks:
      - monitoring
  grafana-loki:
    container_name: hello-grafana-loki
    image: grafana/loki
    ports:
      - 3100:3100
    networks:
      - monitoring
